name: Release
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM:  ${{ secrets.TURBO_TEAM }}

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  rp:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       github.base_ref == 'main')
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mk.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Install JS deps
        run: pnpm install

      - name: Pre generate Release Please config & manifest
        run: node scripts/release/pre.mjs

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          skip-github-pull-request: true

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs['apps/cli--release_created'] }}

      - name: Tag major/minor pointers
        if: ${{ steps.release.outputs['apps/cli--release_created'] }}
        run: scripts/release/tag-rolling.sh "${{ steps.release.outputs['apps/cli--major'] }}" "${{ steps.release.outputs['apps/cli--minor'] }}"

      - name: Post build matrix (RP âˆ© Turbo affected)
        id: mk
        run: |
          node scripts/release/post.mjs '${{ steps.release.outputs.paths_released }}' > /tmp/matrix.json
          echo "matrix=$(cat /tmp/matrix.json)" >> "$GITHUB_OUTPUT"

  goreleaser:
    needs: rp
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.rp.outputs.matrix).include && (join(fromJson(needs.rp.outputs.matrix).include, '') != '') }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.rp.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          install: true
          cache: true

      - name: Install JS deps (if needed)
        run: if [ -f pnpm-lock.yaml ]; then pnpm install --frozen-lockfile || pnpm install; fi

      - name: Resolve component tag
        id: tag
        run: |
          git fetch --tags --force
          comp='${{ matrix.include.component }}'
          if [ -z "$comp" ]; then
            pat='v[0-9]*.[0-9]*.[0-9]*'
          else
            pat="${comp}@v[0-9]*.[0-9]*.[0-9]*"
          fi
          tag="$(git tag -l "$pat" --sort=-v:refname | head -n1)"
          if [ -z "$tag" ]; then echo "skip=true" >> $GITHUB_OUTPUT; exit 0; fi
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Checkout tag
        if: ${{ steps.tag.outputs.skip != 'true' }}
        run: git checkout -b "build/${{ matrix.include.name }}" "refs/tags/${{ steps.tag.outputs.tag }}"

      - name: GoReleaser Pro
        if: ${{ steps.tag.outputs.skip != 'true' }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> v2"
          args: release --clean --config "${{ matrix.include.config }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
